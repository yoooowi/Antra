server.port=8200

spring.cloud.gateway.routes[0].id=weatherModule
spring.cloud.gateway.routes[0].uri=lb://search
spring.cloud.gateway.routes[0].predicates[0]=Path=/weather/**

spring.cloud.gateway.routes[1].id=detailsModule
spring.cloud.gateway.routes[1].uri=lb://details
spring.cloud.gateway.routes[1].predicates[0]=Path=/details/**
#spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=universityModule
spring.cloud.gateway.routes[2].uri=lb://university
spring.cloud.gateway.routes[2].predicates[0]=Path=/university/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[3].id=bookModule
spring.cloud.gateway.routes[3].uri=lb://book
spring.cloud.gateway.routes[3].predicates[0]=Path=/book/**
#spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[4].id=bookModule
spring.cloud.gateway.routes[4].uri=lb://book
spring.cloud.gateway.routes[4].predicates[0]=Path=/author/**
#spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[5].id=authModule
spring.cloud.gateway.routes[5].uri=lb://auth
spring.cloud.gateway.routes[5].predicates[0]=Path=/login

spring.cloud.gateway.routes[6].id=authModule
spring.cloud.gateway.routes[6].uri=lb://auth
spring.cloud.gateway.routes[6].predicates[0]=Path=/auth/**

jwt.secret={cipher}{key:config-service-key}AQBW7i5HNcU1cLs5tzxmvgGYw1aS1cSb+OyUT59l0iZUsHw/SkKjv365q+vL49M6ruxvTyzuPSoyIeVOj432IwA7aJngx4uCF/SntzBE5FYPahwAOgZy6cTFJyBCpkee339t+Aj2iIfsmmKnPiqJX0d88U0VYxLzFhiugS4YTKhmkYLacST30M7spoF0frMaqE15C3Fi1IxibG0Pq0/BMiCMvvLh+OZmBVGEOG/wiCkRATDOzdtDnPOtCRpovMMWQrc/N5cg/NARNR6CVNTcyvaAZVeM4piAhiz87Meguv6HPJRdyrePf387gUEfgWc6EhJSzbVvtAQ1HcgqYOVhzYsJfLej2yMh50FjZadoD4vGJTaz+6p33kF0asImdmiDs4M=

spring.cloud.gateway.discovery.locator.enabled=true

myservice.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.registryFetchIntervalSeconds=xx
#ribbon.ServerListRefreshInterval

#actuator endpoint
management.endpoints.web.exposure.include=*

#indicates the frequency the client sends heartbeat to server to indicate that it is alive.
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/